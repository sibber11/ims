<script setup>
import { ref } from "vue";
import { mdiBallotOutline } from "@mdi/js";
import SectionMain from "@/components/SectionMain.vue";
import CardBox from "@/components/CardBox.vue";
import FormField from "@/components/FormField.vue";
import FormControl from "@/components/FormControl.vue";
import BaseButton from "@/components/BaseButton.vue";
import BaseButtons from "@/components/BaseButtons.vue";
import LayoutAuthenticated from "@/layouts/LayoutAuthenticated.vue";
import SectionTitleLineWithButton from "@/components/SectionTitleLineWithButton.vue";
import { computed } from "vue";
import { kebabCase } from 'lodash/string';
import { useForm } from "@inertiajs/vue3";
import { useMainStore } from "@/stores/main.js";

const props = defineProps({
    
})

const mainStore = useMainStore();

const form = useForm({
    title: '',
});
const slug = computed(()=>kebabCase(form.title));

const submit = () => {
    form.post(route('{{ name_lowercase }}.store'),{
        onSuccess: ()=>{
            form.reset();
            mainStore.unDismissNotification();
        }
    })
};


</script>

<template>
    <LayoutAuthenticated>
        <SectionMain>
            <SectionTitleLineWithButton :icon="mdiBallotOutline" title="Create {{ name_uppercase }}" main>
            </SectionTitleLineWithButton>
            <CardBox :is-form="true" @submit.prevent="submit">

                <FormField label="{{ name_uppercase }} Name" :error="form.errors.title">
                    <FormControl v-model="form.title" placeholder="Enter {{ name_uppercase }} Name..." />
                </FormField>

                <template #footer>
                    <BaseButtons>
                        <BaseButton type="submit" color="info" label="Submit" />
                        <BaseButton type="reset" color="danger" outline label="Reset" />
                    </BaseButtons>
                </template>
            </CardBox>
        </SectionMain>
    </LayoutAuthenticated>
</template>
